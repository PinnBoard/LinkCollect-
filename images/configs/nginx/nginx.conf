# worker_processes 1;

# events {
#   worker_connections 1024;
# }

# http {
#   include /etc/nginx/mime.types;
#   default_type application/octet-stream;

#   sendfile on;
#   keepalive_timeout 65;

#   # Configure subdomain api.linkcollect.io
#   server {
#     listen 80;
#     # server_name api.linkcollect.io;
#     server_name api.linkcollect.io;
# # reverse proxy to nodejs app running in docker container on port 3000 (see docker-compose.yml)
#     location / {
#       proxy_pass http://ts-node-docker:3000;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#       proxy_set_header Connection 'upgrade';
#       proxy_set_header Host $host;
#       proxy_cache_bypass $http_upgrade;
#     }
#   }
# }

# server {
#         listen 80;
#         listen [::]:80;

#         root /var/www/certbot;
#         index index.html index.htm index.nginx-debian.html;

#         server_name localhost dev.localhost;

#         location / {
#                   proxy_pass http://ts-node-docker:3000;
#                   proxy_http_version 1.1;
#                   proxy_set_header Upgrade $http_upgrade;
#                   proxy_set_header Connection 'upgrade';
#                   proxy_set_header Host $host;
#                   proxy_set_header X-Real-IP $remote_addr;
#                   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                   proxy_cache_bypass $http_upgrade;
#         }

#         location ~ /.well-known/acme-challenge {
#                 allow all;
#                 root /var/www/html;
#         }
# }


# server {
#     listen 80;
#     server_name example.org;
#     location / {
#         return 301 https://localhost:3000$request_uri;
#     }    
# }
server {
    listen 443 ssl;
    listen 80;

    server_name localhost;

        location / {
                  proxy_pass http://ts-node-docker:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_cache_bypass $http_upgrade;
        }

    ssl_certificate /etc/letsencrypt/live/example.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;  
}