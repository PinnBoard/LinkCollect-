
version: '3.9'

services:
    ts-node-docker:
        container_name: ts-node-docker
        build:
            context: .
            dockerfile: ./images/nodejs.dockerfile
            target: base
        volumes:
        - ./src:/app/src
        - ./nodemon.json:/app/nodemon.json
        ports:
            - "3000:3000" 
        networks:
            - example-net
        depends_on:
            - mongo
        restart: unless-stopped
        command: npm run dev
    mongo:
        container_name: mongo
        build:
            context: .
            dockerfile: ./images/mongo.dockerfile
            target: base
        volumes:
            - ./mongo:/data/db
            - ./dump:/data/dump
        ports:
            - "27017:27017" 
        networks:
            - example-net 
        # environment:
            # - MONGO_INITDB_ROOT_USERNAME=harshlinkcollect01
            # - MONGO_INITDB_ROOT_PASSWORD=harshlinkcollect01
            # - MONGO_INITDB_DATABASE=linkcollect
    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
        - ./images/configs/certbot/certbot-etc:/etc/letsencrypt
        - ./images/configs/certbot/certbot-var:/var/lib/letsencrypt
        - ./images/configs/certbot/www:/var/www/certbot
        - ./images/configs/certbot/web-root:/var/www/html
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        depends_on:
            - nginx
        command: certonly --webroot --webroot-path=/var/www/html --email harshsingh.eth@gmail.com --agree-tos --no-eff-email --staging -d localhost  -d dev.localhost
    nginx:
        build:
            context: .
            dockerfile: ./images/nginx.dockerfile
            target: base
        container_name: nginx
        hostname: nginx
        restart: unless-stopped
        volumes:
            - ./images/configs/certbot/web-root:/var/www/html
            - ./images/configs/nginx:/etc/nginx/conf.d
            - ./images/configs/certbot/certbot-etc:/etc/letsencrypt
            - ./images/configs/certbot/certbot-var:/var/lib/letsencrypt
        ports:
        - "80:80" 
        - "443:443" 
        depends_on:
            - ts-node-docker
            # command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        networks:
            - example-net


networks:
  example-net:
    external: true
    driver: bridge

volumes:
    mongo: {}
    dump: 
